{
  "SchemaVersion": 2,
  "CreatedAt": "2025-07-12T16:16:55.386777863-03:00",
  "ArtifactName": "trivy-scan:3.12-alpine3.22",
  "ArtifactType": "container_image",
  "Metadata": {
    "Size": 57350144,
    "OS": {
      "Family": "alpine",
      "Name": "3.22.0"
    },
    "ImageID": "sha256:efdf379f69cb72d7083693655a57348fe8035c4c899d84859ac79956ad2b67f9",
    "DiffIDs": [
      "sha256:fd2758d7a50e2b78d275ee7d1c218489f2439084449d895fa17eede6c61ab2c4",
      "sha256:99e4a208abd292d0c9075253890ea049f3d96de05c3326672d7dbb59bbed8066",
      "sha256:dd417befd000abf719320cb2fbd5619958c0511ce5143d6d83361e806996804b",
      "sha256:c8761ad3eb8fc1920c87f5f50618b088f13161753fcd60adeb9c8c42752187b2"
    ],
    "RepoTags": [
      "trivy-scan:3.12-alpine3.22"
    ],
    "RepoDigests": [
      "trivy-scan@sha256:efdf379f69cb72d7083693655a57348fe8035c4c899d84859ac79956ad2b67f9"
    ],
    "ImageConfig": {
      "architecture": "amd64",
      "created": "2025-07-12T05:18:21.700084517Z",
      "history": [
        {
          "created": "2025-05-30T16:20:41Z",
          "created_by": "ADD alpine-minirootfs-3.22.0-x86_64.tar.gz / # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-05-30T16:20:41Z",
          "created_by": "CMD [\"/bin/sh\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-07-11T19:33:54Z",
          "created_by": "ENV PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-07-11T19:33:54Z",
          "created_by": "ENV LANG=C.UTF-8",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-07-11T19:33:54Z",
          "created_by": "RUN /bin/sh -c set -eux; \tapk add --no-cache \t\tca-certificates \t\ttzdata \t; # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-11T19:33:54Z",
          "created_by": "ENV GPG_KEY=7169605F62C751356D054A26A821E680E5FA6305",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-07-11T19:33:54Z",
          "created_by": "ENV PYTHON_VERSION=3.12.11",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-07-11T19:33:54Z",
          "created_by": "ENV PYTHON_SHA256=c30bb24b7f1e9a19b11b55a546434f74e739bb4c271a3e3a80ff4380d49f7adb",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        },
        {
          "created": "2025-07-12T05:18:20Z",
          "created_by": "RUN /bin/sh -c set -eux; \t\tapk add --no-cache --virtual .build-deps \t\tgnupg \t\ttar \t\txz \t\t\t\tbluez-dev \t\tbzip2-dev \t\tdpkg-dev dpkg \t\tfindutils \t\tgcc \t\tgdbm-dev \t\tlibc-dev \t\tlibffi-dev \t\tlibnsl-dev \t\tlibtirpc-dev \t\tlinux-headers \t\tmake \t\tncurses-dev \t\topenssl-dev \t\tpax-utils \t\treadline-dev \t\tsqlite-dev \t\ttcl-dev \t\ttk \t\ttk-dev \t\tutil-linux-dev \t\txz-dev \t\tzlib-dev \t; \t\twget -O python.tar.xz \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz\"; \techo \"$PYTHON_SHA256 *python.tar.xz\" | sha256sum -c -; \twget -O python.tar.xz.asc \"https://www.python.org/ftp/python/${PYTHON_VERSION%%[a-z]*}/Python-$PYTHON_VERSION.tar.xz.asc\"; \tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver hkps://keys.openpgp.org --recv-keys \"$GPG_KEY\"; \tgpg --batch --verify python.tar.xz.asc python.tar.xz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" python.tar.xz.asc; \tmkdir -p /usr/src/python; \ttar --extract --directory /usr/src/python --strip-components=1 --file python.tar.xz; \trm python.tar.xz; \t\tcd /usr/src/python; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--enable-loadable-sqlite-extensions \t\t--enable-option-checking=fatal \t\t--enable-shared \t\t$(test \"$gnuArch\" != 'riscv64-linux-musl' \u0026\u0026 echo '--with-lto') \t\t--with-ensurepip \t; \tnproc=\"$(nproc)\"; \tEXTRA_CFLAGS=\"-DTHREAD_STACK_SIZE=0x100000\"; \tLDFLAGS=\"${LDFLAGS:--Wl},--strip-all\"; \t\tarch=\"$(apk --print-arch)\"; \t\tcase \"$arch\" in \t\t\tx86_64|aarch64) \t\t\t\tEXTRA_CFLAGS=\"${EXTRA_CFLAGS:-} -fno-omit-frame-pointer -mno-omit-leaf-frame-pointer\"; \t\t\t\t;; \t\t\tx86) \t\t\t\t;; \t\t\t*) \t\t\t\tEXTRA_CFLAGS=\"${EXTRA_CFLAGS:-} -fno-omit-frame-pointer\"; \t\t\t\t;; \t\tesac; \tmake -j \"$nproc\" \t\t\"EXTRA_CFLAGS=${EXTRA_CFLAGS:-}\" \t\t\"LDFLAGS=${LDFLAGS:-}\" \t; \trm python; \tmake -j \"$nproc\" \t\t\"EXTRA_CFLAGS=${EXTRA_CFLAGS:-}\" \t\t\"LDFLAGS=${LDFLAGS:--Wl},-rpath='\\$\\$ORIGIN/../lib'\" \t\tpython \t; \tmake install; \t\tcd /; \trm -rf /usr/src/python; \t\tfind /usr/local -depth \t\t\\( \t\t\t\\( -type d -a \\( -name test -o -name tests -o -name idle_test \\) \\) \t\t\t-o \\( -type f -a \\( -name '*.pyc' -o -name '*.pyo' -o -name 'libpython*.a' \\) \\) \t\t\\) -exec rm -rf '{}' + \t; \t\tfind /usr/local -type f -executable -not \\( -name '*tkinter*' \\) -exec scanelf --needed --nobanner --format '%n#p' '{}' ';' \t\t| tr ',' '\\n' \t\t| sort -u \t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t\t| xargs -rt apk add --no-network --virtual .python-rundeps \t; \tapk del --no-network .build-deps; \t\texport PYTHONDONTWRITEBYTECODE=1; \tpython3 --version; \tpip3 --version # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-12T05:18:21Z",
          "created_by": "RUN /bin/sh -c set -eux; \tfor src in idle3 pip3 pydoc3 python3 python3-config; do \t\tdst=\"$(echo \"$src\" | tr -d 3)\"; \t\t[ -s \"/usr/local/bin/$src\" ]; \t\t[ ! -e \"/usr/local/bin/$dst\" ]; \t\tln -svT \"$src\" \"/usr/local/bin/$dst\"; \tdone # buildkit",
          "comment": "buildkit.dockerfile.v0"
        },
        {
          "created": "2025-07-12T05:18:21Z",
          "created_by": "CMD [\"python3\"]",
          "comment": "buildkit.dockerfile.v0",
          "empty_layer": true
        }
      ],
      "os": "linux",
      "rootfs": {
        "type": "layers",
        "diff_ids": [
          "sha256:fd2758d7a50e2b78d275ee7d1c218489f2439084449d895fa17eede6c61ab2c4",
          "sha256:99e4a208abd292d0c9075253890ea049f3d96de05c3326672d7dbb59bbed8066",
          "sha256:dd417befd000abf719320cb2fbd5619958c0511ce5143d6d83361e806996804b",
          "sha256:c8761ad3eb8fc1920c87f5f50618b088f13161753fcd60adeb9c8c42752187b2"
        ]
      },
      "config": {
        "Cmd": [
          "python3"
        ],
        "Env": [
          "PATH=/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "LANG=C.UTF-8",
          "GPG_KEY=7169605F62C751356D054A26A821E680E5FA6305",
          "PYTHON_VERSION=3.12.11",
          "PYTHON_SHA256=c30bb24b7f1e9a19b11b55a546434f74e739bb4c271a3e3a80ff4380d49f7adb"
        ],
        "WorkingDir": "/",
        "ArgsEscaped": true
      }
    },
    "Layers": [
      {
        "Size": 8593920,
        "Digest": "sha256:fe07684b16b82247c3539ed86a65ff37a76138ec25d380bd80c869a1a4c73236",
        "DiffID": "sha256:fd2758d7a50e2b78d275ee7d1c218489f2439084449d895fa17eede6c61ab2c4"
      },
      {
        "Size": 1688576,
        "Digest": "sha256:f3f89322fb5d329cec11ec3c2f2187c1d4a39efda77e4c77e101152f7cf80783",
        "DiffID": "sha256:99e4a208abd292d0c9075253890ea049f3d96de05c3326672d7dbb59bbed8066"
      },
      {
        "Size": 47062528,
        "Digest": "sha256:8cc1799d1002396f6dbabd875e54fc58a784ed906c23b0ab19e20a3b19729020",
        "DiffID": "sha256:dd417befd000abf719320cb2fbd5619958c0511ce5143d6d83361e806996804b"
      },
      {
        "Size": 5120,
        "Digest": "sha256:6eec604bb2257748ac5bcd95a81101595886ee458bb1fb1a0319e428c5ed84b9",
        "DiffID": "sha256:c8761ad3eb8fc1920c87f5f50618b088f13161753fcd60adeb9c8c42752187b2"
      }
    ]
  },
  "Results": [
    {
      "Target": "trivy-scan:3.12-alpine3.22 (alpine 3.22.0)",
      "Class": "os-pkgs",
      "Type": "alpine"
    },
    {
      "Target": "Python",
      "Class": "lang-pkgs",
      "Type": "python-pkg"
    }
  ]
}
